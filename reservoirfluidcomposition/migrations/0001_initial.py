# Generated by Django 4.1 on 2023-05-04 00:47

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("sublayers", "0003_alter_sublayer_area_alter_sublayer_description_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="FluidComposition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("fgId", models.PositiveIntegerField()),
                ("wellName", models.CharField(max_length=100)),
                ("sampleId", models.PositiveIntegerField()),
                ("date", models.DateField()),
                ("lab", models.CharField(max_length=100)),
                (
                    "component",
                    models.CharField(
                        choices=[
                            ("Hydrogen_Sulphide", "Hydrogen_Sulphide"),
                            ("Carbon_Dioxide", "Carbon_Dioxide"),
                            ("Nitrogen", "Nitrogen"),
                            ("Methane", "Methane"),
                            ("Ethane", "Ethane"),
                            ("Propane", "Propane"),
                            ("iso-Butane", "iso-Butane"),
                            ("n-Butane", "n-Butane"),
                            ("iso-Pentane", "iso-Pentane"),
                            ("n-Pentane", "n-Pentane"),
                            ("Hexanes", "Hexanes"),
                            ("Heptanes", "Heptanes"),
                            ("Octanes", "Octanes"),
                            ("Nonanes", "Nonanes"),
                            ("Decanes", "Decanes"),
                            ("Undecanes", "Undecanes"),
                            ("Dodecanes", "Dodecanes"),
                            ("Tridecanes", "Tridecanes"),
                            ("Tetradecanes", "Tetradecanes"),
                            ("Pentadecanes", "Pentadecanes"),
                            ("Hexadecanes", "Hexadecanes"),
                            ("Heptadecanes", "Heptadecanes"),
                            ("Octadecanes", "Octadecanes"),
                            ("Nonadecanes", "Nonadecanes"),
                            ("Eicosanes", "Eicosanes"),
                            ("Heneicosanes", "Heneicosanes"),
                            ("Docosanes", "Docosanes"),
                            ("Tricosanes", "Tricosanes"),
                            ("Tetracosanes", "Tetracosanes"),
                            ("Pentacosanes", "Pentacosanes"),
                            ("Hexacosanes", "Hexacosanes"),
                            ("Heptacosanes", "Heptacosanes"),
                            ("Octacosanes", "Octacosanes"),
                            ("Nonacosanes", "Nonacosanes"),
                            ("Heptanes_plus", " Heptanes_plus"),
                            ("Undecanes_plus", "Undecanes_plus"),
                            ("Pentadecanes_plus", "Pentadecanes_plus"),
                            ("Eicosanes_plus", "Eicosanes_plus"),
                            ("Pentacosanes_plus", "Pentacosanes_plus"),
                            ("Triacontanes_plus ", "Triacontanes_plus "),
                        ],
                        default="Methane",
                        max_length=100,
                    ),
                ),
                ("mole_Percent", models.FloatField()),
                ("weight_Percent", models.FloatField()),
                ("liquid_Density", models.FloatField()),
                ("molecular_Weight", models.FloatField()),
                (
                    "subLayer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="sublayers.sublayer",
                    ),
                ),
            ],
        ),
    ]
